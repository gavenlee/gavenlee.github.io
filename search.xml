<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java一些思路</title>
      <link href="/2023/03/09/Java%E6%80%9D%E8%B7%AF/"/>
      <url>/2023/03/09/Java%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h1><h2 id="同属性不同名称对象传值"><a href="#同属性不同名称对象传值" class="headerlink" title="同属性不同名称对象传值"></a>同属性不同名称对象传值</h2><p>直接继承就好</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇md</title>
      <link href="/2023/03/07/20230307/"/>
      <url>/2023/03/07/20230307/</url>
      
        <content type="html"><![CDATA[<h2 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你好啊！</title>
      <link href="/2023/03/07/hello-world/"/>
      <url>/2023/03/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>你好啊，欢迎来到我的个人主页哈哈哈哈哈哈哈哈哈<br>下面这些是hexo模板的命令</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>live2d导入</title>
      <link href="/2020/10/14/live2d%E7%AE%80%E5%8D%95%E5%AF%BC%E5%85%A5/"/>
      <url>/2020/10/14/live2d%E7%AE%80%E5%8D%95%E5%AF%BC%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<p><img src="image-20201014154751316.png" alt="image-20201014154751316"></p><p>简单的一张图展示一下效果</p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://eqcn.ajz.miesnfu.com/wp-content/plugins/wp-3d-pony/live2dw/lib/L2Dwidget.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    L2Dwidget.init(&#123;</span><br><span class="line">        &quot;model&quot;: &#123;</span><br><span class="line">　　　　　　　//jsonpath控制显示那个live2d模型</span><br><span class="line">            jsonPath: &quot;https://unpkg.com/live2d-widget-model-chitose@1.0.5/assets/chitose.model.json&quot;,</span><br><span class="line">            &quot;scale&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;display&quot;: &#123;</span><br><span class="line">            &quot;position&quot;: &quot;right&quot;, //live2d的表现位置</span><br><span class="line">            &quot;width&quot;: 150,  //live2d的宽度</span><br><span class="line">            &quot;height&quot;: 300, //live2d的高度</span><br><span class="line">            &quot;hOffset&quot;: 0, //live2d的x坐标</span><br><span class="line">            &quot;vOffset&quot;: -20 //live2d的y坐标</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot;: &#123;</span><br><span class="line">            &quot;show&quot;: true,</span><br><span class="line">            &quot;scale&quot;: 0.5</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;react&quot;: &#123;</span><br><span class="line">            &quot;opacityDefault&quot;: 0.7,</span><br><span class="line">            &quot;opacityOnHover&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>你有很多选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p><img src="image-20201014155209386.png" alt="image-20201014155209386"></p><p>替换的时候这两个东西都要替换到，自己做尝试吧。</p>]]></content>
      
      
      <categories>
          
          <category> live2d </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo学习手册</title>
      <link href="/2020/10/14/hexo%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%89%8B%E5%86%8C/"/>
      <url>/2020/10/14/hexo%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/victoryxa/article/details/103733655?spm=1001.2014.3001.5501">首先参照这个人的项目手册</a></p><p>还有一些常用的git命令</p><p>清除渲染的模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>Hexo会根据配置文件渲染出一套静态页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>Hexo部署网页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>将上一步渲染出的一系列文件上传至至Github Pages</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>也可以直接输入此命令，直接完成渲染和上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h1 id="建一个文章"><a href="#建一个文章" class="headerlink" title="建一个文章"></a>建一个文章</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名字&quot;</span><br></pre></td></tr></table></figure><p>这个人的教程基本跟github的教程相同，不过步骤更精细一些是个非常好的文章，</p><p>一套流程跟下来之后大概你的项目就搭建好了这个时候需要写博客了，</p><p>关于博客的创作你可能会遇到图片插入的问题，那么如何解决这个问题呢。</p><p>我们都知道：</p><p>Hexo是一个静态的博客网站生成器，生成一个博客只需要分分钟的时间就能搞定。</p><p>Hexo的博文是支持Markdown格式的，发表一篇文章只需要简简单单的几个命令。</p><p><code>hexo new &#39;文章&#39;</code>就会生成一个名为’文章’的md文件。</p><p><img src="641.png" alt="641"></p><p>在图中位置添加描述，分类以及标签，有利于搜索分类（以下为模板）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: #你的博客文章名</span><br><span class="line">date: 2020-09-07 09:25:00 #文章时间</span><br><span class="line">author: GavenLee #作者</span><br><span class="line">img: /source/images/xxx.jpg #图片</span><br><span class="line">top: true #是否顶置</span><br><span class="line">cover: true #是否在引导页轮播</span><br><span class="line">coverImg: /images/1.jpg #轮播图片</span><br><span class="line">password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 #阅读密码这里被加密</span><br><span class="line">toc: false #toc</span><br><span class="line">mathjax: false #mathjax</span><br><span class="line">summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</span><br><span class="line">categories: Markdown #分类</span><br><span class="line">tags: #标签</span><br><span class="line">  - Typora</span><br><span class="line">  - Markdown</span><br><span class="line">abbrlink: HexoLearn #链接</span><br><span class="line">swiper_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="如何向hexo博客中插入图片"><a href="#如何向hexo博客中插入图片" class="headerlink" title="如何向hexo博客中插入图片"></a>如何向hexo博客中插入图片</h2><p>众所周知，在md文件中插入图片的语法为<code>![]()</code>。</p><p>其中<strong>方括号</strong>是图片描述，<strong>圆括号</strong>是图片路径。</p><p>一般来说有三种图片路径，分别是<strong>相对路径，绝对路径和网络路径</strong>。</p><p>所谓的网络路径就是直接引用网上的图片，直接复制图片地址，放在圆括号中就完事了。</p><p>这种方式十分的方便，但是也存在一定的问题：</p><ul><li>图片失效导致无法加载；</li><li>打开网页后要再请求加载图片；</li><li>原网站限制，如微信公众号的图片会变得不可见等。</li></ul><p>这种方式算是有利有弊。</p><p>绝对路径是图片在计算机中的绝对位置，相对路径是相对于当前文件的路径。</p><p>由于我们的博客是要部署在网站上，部署后会生成新的文件目录，所以我们选择使用相对路径的方式。</p><p>在hexo中使用<strong>文章资源文件夹</strong>需要在<code>config.yaml</code>文件中更改一下配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>当该配置被应用后，使用<code>hexo new</code>命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</p><blockquote><p>由于项目会生成新的文件目录，同时会解析Markdown中的图片路径，会导致一个问题。</p><p>如在一个文件目录下，博客名为<code>1.md</code>，相应的存在一个<code>1</code>文件夹存放图片<code>image.jpg</code>。</p><p>在Typora编辑器中，普通的md文件使用<code>![](1/image.jpg)</code>能在编辑器中正常显示图片。</p><p>在hexo中，按理说应该是使用<code>![](image.jpg)</code>，但网页中却无法正常显示。</p><p>此时应该使用这样的方式来引入图片：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img image.jpg 这是一张图片 %&#125;</span><br></pre></td></tr></table></figure></blockquote><p>虽然可以正常引用图片了，但是这种引用图片的方式只有一句话能形容，wtf。</p><h2 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h2><p>插件hexo-renderer-marked解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure><p>之后就可以在使用<code>![](image.jpg)</code>的方式愉快的插入图片了。</p><p>我们做了这么多都是为了方便，那么为什么不再方便一点呢。</p><h2 id="hexo与Typora的完美结合"><a href="#hexo与Typora的完美结合" class="headerlink" title="hexo与Typora的完美结合"></a>hexo与Typora的完美结合</h2><p>上述是从文章资源文件夹中引用图片，前提是<strong>先将图片放入到文章资源文件夹</strong>，如果图片数量众多的话，一张一张的放很影响效率。但是不用怕，我们有很方便的解决方法。</p><p><strong>Typora</strong>是我非常喜欢的Markdown文本编辑器，在之前的文章中也介绍过一点。</p><p>Typora对于插入图片的支持做得非常好，在<code>文件-&gt;偏好设置</code>或者直接<code>&lt;C-,&gt;</code>进入设置。</p><p><img src="456.png" alt="456"></p><p>使用该配置后，可以直接复制网页中的图片地址，粘贴到Typora中后，会直接复制该图片到文章资源文件夹，同时自动更改路径。</p><p>如复制网络路径的图片<code>https://...../image.jpg</code>粘贴到Typora中叫<code>文章名</code>的文章后，图片会自动变为<code>![](文章名/image.jpg)</code>。</p><p>但我们知道部署后，文件路径是不同的，所以当我们插入完所有的图片后，我们还需要删除每个图片路径中的<code>文件名/</code>。不慌，也很简单。</p><p>在Typora编辑器中，使用<code>&lt;C-f&gt;</code>快捷键，将所有的<code>文章名/</code>替换为空即可删除。</p><p><img src="123.png" alt="123"></p><p>删除文件名</p><p>然后再将博客上传，图片就会随着文章一起打包。</p><p>在网页中就可以看到正常显示的图片，大功告成。</p><h2 id="hexo内置的图标库"><a href="#hexo内置的图标库" class="headerlink" title="hexo内置的图标库"></a>hexo内置的图标库</h2><p>以我的matey主题为例</p><p>在主题路径下的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source\libs\awesome\css\all.css</span><br></pre></td></tr></table></figure><p>没错，该项目的图标都在这个css中</p><p>之后去这个<a href="http://www.fontawesome.com.cn/">网站</a></p><p>图标都在这里有，要看好自己的版本，用的时候现在你的css里找找有没有这个css，有的话直接调用就好。</p><p><img src="image-20201014141300760.png" alt="image-20201014141300760"></p><p>当然，你也可以去<a href="www.iconfont.cn">阿里图标库</a></p><p>具体怎么做参照<a href="https://blog.csdn.net/u012208219/article/details/106883012">这里</a></p><p>记得用的时候class内容前面加iconfont空格</p><h1 id="创建新的也页面"><a href="#创建新的也页面" class="headerlink" title="创建新的也页面"></a>创建新的也页面</h1><p>在博客根目录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><p>—- title: tags date: 2018-09-30 18:23:38 type: “tags” layout: “tags” —-</p><h1 id="文章局部html代码不渲染"><a href="#文章局部html代码不渲染" class="headerlink" title="文章局部html代码不渲染"></a>文章局部html代码不渲染</h1><p>在你的 md 文章页中，部分内容不想经过 Hexo 渲染，则包一层 <code>raw</code> 标签：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">raw</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;&quot;&gt;你的一些代码...&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;你的一些代码...&lt;/script&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endraw</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="pdf插件"><a href="#pdf插件" class="headerlink" title="pdf插件"></a>pdf插件</h1><p>详情看这里</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-pdf</span> <span class="string">--save</span> <span class="string">安装</span></span><br><span class="line"><span class="comment"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">pdf</span> <span class="string">xxx.pdf</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="comment"># 2.在线链接</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">pdf</span> <span class="string">https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限验证的方法（补充中）</title>
      <link href="/2020/10/11/%E6%9D%83%E9%99%90%E9%AA%8C%E8%AF%81%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%88%E8%A1%A5%E5%85%85%E4%B8%AD%EF%BC%89/"/>
      <url>/2020/10/11/%E6%9D%83%E9%99%90%E9%AA%8C%E8%AF%81%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%88%E8%A1%A5%E5%85%85%E4%B8%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA >最近写个自己的网站玩可能会用到权限验证，先在网上找点方法。</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 前言<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >提示：以下是本篇文章正文内容，下面案例可供参考</p><h1 id="一、方法一"><a href="#一、方法一" class="headerlink" title="一、方法一"></a>一、方法一</h1><p><font color=#999AAA >用二进制验证</p><p>可以推荐你使用 按位与  一般符号是 &amp; 来进行操作。<br>具体举例：操作1=1，操作2=2，操作3=4，操作4=8，操作5=16<br>为什么要使用这样的数字呢？<br>因为它们都是2的倍数，这样就可以保证它们转化为的二进制只占其中的一位。<br>具体的：1=00000001，2=00000010，4=00000100，8=00001000，16=00010000<br>你可以看到  每个权限其实只占了一个8位的其中的一位。<br>假设A具有操作1，操作3，操作4的权限，那么A的权限值为：1+4+8=13   它的二进制为00001101<br>现在你要判断A是否具有操作3的权限，只需要判断  13&amp;4   是否等于 4就可以。<br>具体的：<br>   00001101&amp; 00000100</p><hr><p> 00000100</p><p>可以看到如果你有此权限的话，该值是等于操作的权限值的。<br>我们再来验证A是否具有操作2的权限：<br>   00001101&amp; 00000010</p><hr><p>  00000000<br>看到了吧，值等于0，表示A没有操作2的权限。<br>你只要再此基础上封装一下这个操作，就可以实现全线的验证了！<br>比如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public <span class="built_in">string</span> validate（<span class="type">int</span> powers，<span class="type">int</span> power）&#123;</span><br><span class="line"><span class="comment">//powers用户具有的权限,power具体的一个权限</span></span><br><span class="line">       <span class="keyword">if</span>(powers&amp;power!=power)</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;你没有该操作权限！&quot;</span>;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;你具有该操作权限！&quot;</span>;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ok   大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL以时间作为条件加不加引号的问题探讨</title>
      <link href="/2020/10/08/MySQL%E4%BB%A5%E6%97%B6%E9%97%B4%E4%BD%9C%E4%B8%BA%E6%9D%A1%E4%BB%B6%E5%8A%A0%E4%B8%8D%E5%8A%A0%E5%BC%95%E5%8F%B7%E7%9A%84%E9%97%AE%E9%A2%98%E6%8E%A2%E8%AE%A8/"/>
      <url>/2020/10/08/MySQL%E4%BB%A5%E6%97%B6%E9%97%B4%E4%BD%9C%E4%B8%BA%E6%9D%A1%E4%BB%B6%E5%8A%A0%E4%B8%8D%E5%8A%A0%E5%BC%95%E5%8F%B7%E7%9A%84%E9%97%AE%E9%A2%98%E6%8E%A2%E8%AE%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="项目场景："><a href="#项目场景：" class="headerlink" title="项目场景："></a>项目场景：</h1><font color=#999AAA >有时间格式的数据作为检索条件时遇到了一个比较有趣的问题</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 问题描述：<font color=#999AAA >有这么一条sql语句：![在这里插入图片描述](20201008163818173.png)理论上说这个也能检索到下面的那些数据但实际上并没有获取到下面以1900年份开头的数据![在这里插入图片描述](20201008164118448.png)下面三个图是思考是否为转型之后再比对的结果然后又产生了新的问题。![在这里插入图片描述](20201008165743216.png)![在这里插入图片描述](20201008165846181.png)![在这里插入图片描述](20201008165930250.png)<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>为什么图一检索不到图二里的数据？（图一图二）（未解决）</span><br><span class="line"><span class="number">2.</span>图三图四？横杠的作用？对比前的准备？（已解决）</span><br><span class="line"><span class="number">3.</span>图<span class="number">4</span>图<span class="number">5</span>？？？？？？（与一类似未解决）</span><br></pre></td></tr></table></figure> </font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 原因分析：<font color=#999AAA >ok项目原因找到了，自己给自己摆了个乌龙，该时间数据数据库类型为varchar，所以像图一这种时间的对比方式是不正确的，应该先将数据库内的数据类型转换为时间格式在作比较。问题2是因为图中为字符出串的对比（逐个字符按顺序对比），剩余两个问题还未解决</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h1><p><font color=#999AAA >像数据库里是时间相关的格式是可以进行直接的对比的但是必须要加单引号！如果是varchar类型的话要用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对比时间的条件</span></span><br><span class="line"><span class="title function_">STR_TO_DATE</span>(对应时间列,<span class="string">&#x27;%Y-%m-%d&#x27;</span>) &lt;<span class="title function_">STR_TO_DATE</span>(<span class="string">&#x27;传来的参数&#x27;</span>,<span class="string">&#x27;%Y-%m-%d&#x27;</span>);</span><br></pre></td></tr></table></figure><br>差不多这种形式格式来对比，但实际上还是会检索不到1900年份的数据？（千年虫问题？还是数据库在做对比的时候底层逻辑与人脑逻辑不同）。我会保留考虑这个问题</p>]]></content>
      
      
      <categories>
          
          <category> MySql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue心得</title>
      <link href="/2020/09/23/vue%E5%BF%83%E5%BE%97/"/>
      <url>/2020/09/23/vue%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="记录vue学习过程"><a href="#记录vue学习过程" class="headerlink" title="记录vue学习过程"></a>记录vue学习过程</h1><font color=#999AAA >vue学习心得<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><font color=#999AAA >心得过程为跟随bilibili狂神说的vue视频如果喜欢的话请多多支持狂神说，如果有什么错误的地方欢迎指出</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 前言<font color=#999AAA >学学vue，听懂掌声！</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><font color=#999AAA ><h1 id="一、vue？"><a href="#一、vue？" class="headerlink" title="一、vue？"></a>一、vue？</h1><p>下边有几个问题你要带着：<br>什么是mvvm思想（可对比mvc）？<br><a href="https://blog.csdn.net/weixin_38318244/article/details/85037067">初步了解vue请点击我</a></p><p><font color=#999AAA >上方链接的文章是一个小姐姐的创作，个人认为写得比较好比较全，欢迎参考</p><h1 id="二、学习过程"><a href="#二、学习过程" class="headerlink" title="二、学习过程"></a>二、学习过程</h1><h2 id="1-初步认识vue的构建思想！"><a href="#1-初步认识vue的构建思想！" class="headerlink" title="1.初步认识vue的构建思想！"></a>1.初步认识vue的构建思想！</h2><p><font color=#999AAA >代码如下（示例）：</p><p>直接建一个新网页然后运行这段代码，在控制台中修改vm.message的值和dataa的值，你会发现vue的传参方式无需刷新就会更新到界面，而js无法及时更新（只能通过对dom对象的修改或追加才能做到数据的更新），对于前端开发来说vue的这一功能是里程碑式的突破，而且vue还有着解耦合的mvvm思想，孰高孰低高低立判。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="comment">//这里是view层（一名前端工程师需要做的基础）</span></span><br><span class="line">    &lt;div id=<span class="string">&quot;vueapp&quot;</span>&gt;&#123;&#123;vuedata&#125;&#125;<span class="string">&quot;+这里用来验证是否需要拼字符串来显示+&quot;</span> &#123;&#123;asd&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;jsapp&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.8/vue.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var vm = new Vue(&#123;</span><br><span class="line">            el: <span class="string">&quot;#vueapp&quot;</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">            <span class="comment">//这里是模型层</span></span><br><span class="line">                vuedata:<span class="string">&quot;hello data&quot;</span>,</span><br><span class="line">                <span class="comment">//下面参数来查看vue的传参方式（类似键值对通过key来绑定value并且以&#123;&#123;key的形式绑定到页面元素上&#125;&#125;）</span></span><br><span class="line">                asd:<span class="string">&quot;第二份&quot;</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//下面跟传统js代码做对比</span></span><br><span class="line">        <span class="comment">//在网页的控制台修改vm.message的值与dataa的值会发现vue的双重绑定的意义</span></span><br><span class="line">        var jsdata = <span class="string">&quot;js测试&quot;</span>;</span><br><span class="line">        document.getElementById(<span class="string">&quot;jsapp&quot;</span>).innerHTML=jsdata;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>疑惑：已然有了m（model）层与v(view)层那mv层在哪里啊<br>个人理解：双向绑定的这种形式就是mv层（抽象含义？）</p><p>当然以上并不是真正的vue写法，这只是对这个思想的展示，到了现在我们应该已经认识到：在制作前端的时候我们甚至不需要像之前那样写个假数据等交互的时候再修改（麻烦），我们只需要写个标签并在data里面声明标签的值该动态把值删掉，省去了假数据该动态的时间。</p><p>关键词：DOM监听与数据绑定</p><h2 id="2-指令"><a href="#2-指令" class="headerlink" title="2.指令"></a>2.指令</h2><p><font color=#999AAA >指令带有v-前缀，他们会在dom上应用特殊的响应式行为。例如v-bind<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//放在vueappdiv中展示下面的小作用</span></span><br><span class="line">&lt;span v-bind:title=<span class="string">&quot;new Date()&quot;</span>&gt;v-bind样式展示，请鼠标悬停我。&lt;/span&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><font color=#999AAA >进阶：判断<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//放在vueappdiv里</span></span><br><span class="line">&lt;span v-<span class="keyword">if</span>=<span class="string">&quot;panduan&quot;</span>&gt;是对的&lt;/span&gt;</span><br><span class="line">&lt;span v-<span class="keyword">else</span>&gt;是错的&lt;/span&gt;</span><br><span class="line"><span class="comment">//data同时加个参数</span></span><br><span class="line">panduan: <span class="literal">true</span>,</span><br></pre></td></tr></table></figure></p><p><font color=#999AAA >进阶：循环<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明div</span></span><br><span class="line">&lt;div id=<span class="string">&quot;vueitems&quot;</span>&gt;这个用来测试循环（声明数组）&lt;br&gt;</span><br><span class="line">        &lt;span v-<span class="keyword">for</span>=<span class="string">&quot;item/*便利每一项的命名*/ in items/*便利的数组名*/&quot;</span>&gt;&#123;&#123;item.<span class="built_in">list</span><span class="comment">/*命名.数组名*/</span>&#125;&#125;&lt;/span&gt;</span><br><span class="line">        <span class="comment">/*&lt;span v-for=&quot;(item,index)/*便利每一项的命名*/</span> in items<span class="comment">/*便利的数组名*/</span><span class="string">&quot;&gt;&#123;&#123;item.list&#125;&#125;--下标&#123;&#123;index&#125;&#125;&lt;br&gt;&lt;/span&gt;*/</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">//js</span></span><br><span class="line"><span class="string">var vmitems = new Vue(&#123;</span></span><br><span class="line"><span class="string">            el: &quot;</span><span class="meta">#vueitems<span class="string">&quot;,</span></span></span><br><span class="line"><span class="string"><span class="meta">            data: &#123;</span></span></span><br><span class="line"><span class="string"><span class="meta">                items: [</span></span></span><br><span class="line"><span class="string"><span class="meta">                    &#123;list:&#x27;1&#x27;&#125;,</span></span></span><br><span class="line"><span class="string"><span class="meta">                    &#123;list:&#x27;2&#x27;&#125;,</span></span></span><br><span class="line"><span class="string"><span class="meta">                    &#123;list:&#x27;3&#x27;&#125;,</span></span></span><br><span class="line"><span class="string"><span class="meta">                ]</span></span></span><br><span class="line"><span class="string"><span class="meta">            &#125;</span></span></span><br><span class="line"><span class="string"><span class="meta">        &#125;);</span></span></span><br></pre></td></tr></table></figure></p><p><font color=#999AAA >循环判断都会了，不直接去干活？奥对，还有事件的监听。（方法必须绑定在method里）<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//html</span></span><br><span class="line">&lt;div id=<span class="string">&quot;vueshijian&quot;</span>&gt;&lt;button v-on:click=<span class="string">&quot;asdd&quot;</span>&gt;悬浮我&lt;/button&gt;&lt;br&gt;&lt;span&gt;&#123;&#123;message&#125;&#125;&lt;/span&gt; &lt;/div&gt;&lt;br&gt;</span><br><span class="line"><span class="comment">//js</span></span><br><span class="line">var vmon = new Vue(&#123;</span><br><span class="line">            el: <span class="string">&quot;#vueshijian&quot;</span>,</span><br><span class="line">            data: &#123;</span><br><span class="line">                message:<span class="string">&quot;我kiao！&quot;</span>,</span><br><span class="line">                asd:<span class="string">&quot;这是点击事件&quot;</span>,</span><br><span class="line">                panduan: <span class="literal">true</span>,</span><br><span class="line">                suanshu:<span class="string">&quot;这是悬浮事件&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">              asdaa:function () &#123;</span><br><span class="line">                alert(vmon.suanshu);</span><br><span class="line">              &#125;,</span><br><span class="line">              asdd:function () &#123;</span><br><span class="line">                alert(<span class="string">&quot;我是第二个方法&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><br>没啥心得就是基本事件</p><h2 id="3-axios（异步请求）"><a href="#3-axios（异步请求）" class="headerlink" title="3.axios（异步请求）"></a>3.axios（异步请求）</h2><p>因为vue是面向前端的，所以引入一个网络方面功能<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// An highlighted block</span></span><br><span class="line"><span class="comment">//导入js</span></span><br><span class="line">&lt;script src=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">//html</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;axios&quot;</span> <span class="attr">v-clock</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;info.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="comment">//js</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>:<span class="string">&quot;#axios&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span>&#123;<span class="comment">//请求的返回参数格式，必须和json字符串一样。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">info</span>:&#123;<span class="attr">name</span>: <span class="literal">null</span>&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">mounted</span>(<span class="params"></span>)&#123;<span class="comment">//钩子函数 链式编程</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            axios.<span class="title function_">get</span>(<span class="string">&#x27;data.json&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>(<span class="variable language_">this</span>.<span class="property">info</span> = response.<span class="property">data</span>));<span class="comment">//这个地方难理解axios.get(&#x27;请求地址&#x27;).then(response=&gt;(this.info = response.data))</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="comment">//建立一个叫做data.json的文件放在一个根目录下（文件内内容如下）</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>:<span class="string">&quot;学vue&quot;</span>,</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://vue.js.com&quot;</span>,</span><br><span class="line">  <span class="string">&quot;page&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;isNonProfit&quot;</span>:<span class="string">&quot;true&quot;</span>,</span><br><span class="line">  <span class="string">&quot;address&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;street&quot;</span>: <span class="string">&quot;街&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city&quot;</span>:<span class="string">&quot;城&quot;</span>,</span><br><span class="line">    <span class="string">&quot;country&quot;</span>: <span class="string">&quot;国&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;links&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;B站&quot;</span>,</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.bilibili.com/&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;4399&quot;</span>,</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.4399.com/&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;百度&quot;</span>,</span><br><span class="line">      <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://www.baidu.com/&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><font color=#999AAA >]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echarts饼图文字重叠问题及解决方法</title>
      <link href="/2020/09/19/echarts%E9%A5%BC%E5%9B%BE%E6%96%87%E5%AD%97%E9%87%8D%E5%8F%A0%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2020/09/19/echarts%E9%A5%BC%E5%9B%BE%E6%96%87%E5%AD%97%E9%87%8D%E5%8F%A0%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA >实现前台样式的时候发现饼状图文字部分重合了</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 前言<font color=#999AAA >实现前台样式的时候发现饼状图文字部分重合了如下面所示：</font>![在这里插入图片描述](20200919090601986.png)<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >找了很多方法以下是个人总结的：</p><h2 id="1-解决方法"><a href="#1-解决方法" class="headerlink" title="1.解决方法"></a>1.解决方法</h2><p><font color=#999AAA >代码如下,添加normal这段代码下面的textstyle控制字体的大小（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">series: [&#123;</span><br><span class="line">name: <span class="string">&#x27;类型&#x27;</span>,</span><br><span class="line">minAngle: <span class="number">5</span>,<span class="comment">//这个属性可以控制扇形区域的最小值，防止出现区域为0.01%之类的很小的山顶点不到的情况</span></span><br><span class="line"><span class="comment">//这里还有其余的部分</span></span><br><span class="line">normal:&#123;</span><br><span class="line">          formatter(v) &#123;</span><br><span class="line">             let text = Math.round(v.percent)+<span class="string">&#x27;%&#x27;</span> + <span class="string">&#x27;&#x27; + v.name</span></span><br><span class="line"><span class="string">             if(text.length &lt;= 8)</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                   return text;</span></span><br><span class="line"><span class="string">                 &#125;else if(text.length &gt; 8 &amp;&amp; text.length &lt;= 16)&#123;</span></span><br><span class="line"><span class="string">                   return text = `$&#123;text.slice(0,8)&#125;\n$&#123;text.slice(8)&#125;`</span></span><br><span class="line"><span class="string">                 &#125;else if(text.length &gt; 16 &amp;&amp; text.length &lt;= 24)&#123;</span></span><br><span class="line"><span class="string">                   return text = `$&#123;text.slice(0,8)&#125;\n$&#123;text.slice(8,16)&#125;\n$&#123;text.slice(16)&#125;`</span></span><br><span class="line"><span class="string">                 &#125;else if(text.length &gt; 24 &amp;&amp; text.length &lt;= 30)&#123;</span></span><br><span class="line"><span class="string">                   return text = `$&#123;text.slice(0,8)&#125;\n$&#123;text.slice(8,16)&#125;\n$&#123;text.slice(16,24)&#125;\n$&#123;text.slice(24)&#125;`</span></span><br><span class="line"><span class="string">                 &#125;else if(text.length &gt; 30)&#123;</span></span><br><span class="line"><span class="string">                   return text = `$&#123;text.slice(0,8)&#125;\n$&#123;text.slice(8,16)&#125;\n$&#123;text.slice(16,24)&#125;\n$&#123;text.slice(24,30)&#125;\n$&#123;text.slice(30)&#125;`</span></span><br><span class="line"><span class="string">                 &#125;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       //宪强加的防止标签覆盖</span></span><br><span class="line"><span class="string">    textStyle:&#123;</span></span><br><span class="line"><span class="string">        //字体大小</span></span><br><span class="line"><span class="string">        fontSize: 12</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;]</span></span><br></pre></td></tr></table></figure><p><img src="2020092408144479.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> eCharts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Css </tag>
            
            <tag> eCharts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分割（计数板）展示数字样式</title>
      <link href="/2020/09/18/%E5%88%86%E5%89%B2%EF%BC%88%E8%AE%A1%E6%95%B0%E6%9D%BF%EF%BC%89%E5%B1%95%E7%A4%BA%E6%95%B0%E5%AD%97%E6%A0%B7%E5%BC%8F/"/>
      <url>/2020/09/18/%E5%88%86%E5%89%B2%EF%BC%88%E8%AE%A1%E6%95%B0%E6%9D%BF%EF%BC%89%E5%B1%95%E7%A4%BA%E6%95%B0%E5%AD%97%E6%A0%B7%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA >记录一次前端页面样式</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 前言<font color=#999AAA >写一个前端样式</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >提示：以下是本篇文章正文内容，下面案例可供参考</p><h1 id="一、目标展示"><a href="#一、目标展示" class="headerlink" title="一、目标展示"></a>一、目标展示</h1><p><img src="20200918141817715.png" alt="在这里插入图片描述"></p><p><font color=#999AAA >示例：将后台传来的整数分割成计数板显示</p><h1 id="二、写代码"><a href="#二、写代码" class="headerlink" title="二、写代码"></a>二、写代码</h1><h2 id="1-思路"><a href="#1-思路" class="headerlink" title="1.思路"></a>1.思路</h2><p><font color=#999AAA >思路如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">想法很简单：</span><br><span class="line">图形分为两部分，数字部分 跟 <span class="number">0</span>部分，两部分拆分做</span><br><span class="line">每一位数字存在一个正方形（div）中，（肯定要把数字每位都拿出来以循环的方式放进div）</span><br><span class="line">将后台传来的一个整数先判断是几位数，不足六位数要补<span class="number">0</span></span><br><span class="line">同时判断的时候把每位数放入一个列表中然后输出数据的时候用。</span><br></pre></td></tr></table></figure><h2 id="2-代码展示"><a href="#2-代码展示" class="headerlink" title="2.代码展示"></a>2.代码展示</h2><p><font color=#999AAA >h5代码如下（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 <span class="class"><span class="keyword">class</span>=</span><span class="string">&quot;title&quot;</span>&gt;全国供应商数量&lt;/h2&gt;</span><br><span class="line">   &lt;div <span class="class"><span class="keyword">class</span>=</span><span class="string">&quot;main-center-number&quot;</span> id=<span class="string">&quot;chinanum&quot;</span>&gt;</span><br><span class="line">   &lt;!-- color由js判断内容是否不为<span class="number">0</span>动态添加class --&gt;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure><p><font color=#999AAA >css如下（示例）：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自己写</span><br></pre></td></tr></table></figure></p><p><font color=#999AAA >js如下（示例）：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$(function () &#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">&quot;这里是请求地址&quot;</span>,   <span class="comment">//请求的地址</span></span><br><span class="line">        dataType: <span class="string">&#x27;json&#x27;</span>,   <span class="comment">//请求你成功后返回数据的格式</span></span><br><span class="line">        type: <span class="string">&#x27;POST&#x27;</span>,  <span class="comment">//请求的类型post或get</span></span><br><span class="line">        <span class="comment">//data:&#123;&quot;&quot;:&quot;&quot;&#125;, //需要加查询条件的时候用</span></span><br><span class="line">        success: function (cnum) &#123;   <span class="comment">//()里面对应的就是后端传来的东西</span></span><br><span class="line">            <span class="comment">//用来接所有位数的数组</span></span><br><span class="line">            var <span class="built_in">array</span> = new Array();</span><br><span class="line">            <span class="comment">//先乘10排除只有一位数的情况</span></span><br><span class="line">            <span class="comment">// 判断几位数</span></span><br><span class="line">            var daoxu;</span><br><span class="line">           <span class="keyword">for</span> (var i=<span class="number">0</span>;cnum!=<span class="number">0</span>;i++)&#123;</span><br><span class="line">               <span class="built_in">array</span>[i]=cnum%<span class="number">10</span>;</span><br><span class="line">               cnum = Math.<span class="built_in">floor</span>(cnum/<span class="number">10</span>);</span><br><span class="line">                daoxu = i;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (i&lt;<span class="number">6</span>)&#123;</span><br><span class="line">               <span class="keyword">for</span> (var j=<span class="number">1</span>;j&lt;=<span class="number">6</span>-i;j++)&#123;</span><br><span class="line">                   $(<span class="string">&quot;#chinanum&quot;</span>).append(<span class="string">&quot; &lt;div class=\&quot;number-item\&quot;&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;                        &lt;span&gt;0&lt;/span&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;                    &lt;/div&gt;&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">for</span> (var k=<span class="number">1</span>;k&lt;=i;k++)&#123;</span><br><span class="line">                   $(<span class="string">&quot;#chinanum&quot;</span>).append(<span class="string">&quot; &lt;div class=\&quot;number-item\&quot;&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;                        &lt;span style=&#x27;color: #fcc117&#x27;&gt;&quot;</span>+<span class="built_in">array</span>[i-k]+<span class="string">&quot;&lt;/span&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;                    &lt;/div&gt;&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">for</span> (var k=<span class="number">1</span>;k&lt;=i;k++)&#123;</span><br><span class="line">                   $(<span class="string">&quot;#chinanum&quot;</span>).append(<span class="string">&quot; &lt;div class=\&quot;number-item\&quot;&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;                        &lt;span style=&#x27;color: #fcc117&#x27;&gt;&quot;</span>+<span class="built_in">array</span>[i-k]+<span class="string">&quot;&lt;/span&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;                    &lt;/div&gt;&quot;</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error: function (cnum) &#123;</span><br><span class="line">            alert(msg); <span class="comment">//错误信息</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA ><br>以id选择器展示<br/><br>追加内容： $(“#div”).append(“里面写追加内容”);<br/><br>修改内容：document.getElementById(“div”).innerHTML=”里面写追加内容”;</p>]]></content>
      
      
      <categories>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Css </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax格式模板</title>
      <link href="/2020/09/18/Ajax%E6%A0%BC%E5%BC%8F%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/09/18/Ajax%E6%A0%BC%E5%BC%8F%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[ <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个注释为springboot集成的注释，加上后面的produces那个属性可以直接将返回的数据转换为json格式，很方便</span></span><br><span class="line">@<span class="title class_">RequestMapping</span>(value = <span class="string">&quot;请求路径&quot;</span>,produces = <span class="string">&quot;application/json;charset=UTF-8&quot;</span>)</span><br></pre></td></tr></table></figure><p>这里配合后段传入的参数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//ajax格式，外面嵌套的为jquery方法，此方法在DOM 加载完毕之后执行</span></span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;这里是请求的路径&quot;</span>,   <span class="comment">//请求的地址</span></span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,   <span class="comment">//请求你成功后返回数据的格式</span></span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,  <span class="comment">//请求的类型post或get</span></span><br><span class="line">        <span class="comment">//data:&#123;&quot;&quot;:&quot;&quot;&#125;, //需要加查询条件的时候用</span></span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">capitalLevel</span>) &#123;   <span class="comment">//(对应后台传入的参数名)里面对应的就是后端传来的东西</span></span><br><span class="line">        <span class="comment">//一些方法体</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(capitalLevel);</span><br><span class="line">            supplierData.<span class="property">data</span>=capitalLevel;</span><br><span class="line">            <span class="keyword">var</span> array = handleBusinessChartData (capitalLevel);</span><br><span class="line">            scaleChartData = array;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(array);</span><br><span class="line">            scaleChartInit.<span class="title function_">resize</span>();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">msg</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(msg); <span class="comment">//错误信息</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis控制台错误信息整理</title>
      <link href="/2020/09/17/mybatis%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E6%95%B4%E7%90%86/"/>
      <url>/2020/09/17/mybatis%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA >提示：文章写完后，目录可以自动生成，如何生成可参考右边的帮助文档</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 一、关于mybatis## 1.com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty<font color=#999AAA >代码如下（示例）：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你的mapper.xml文件里有个语句只写了比如&lt;select什么什么的标签&gt;里面没有sql语句，吧sql语句补上。</span><br><span class="line">例：&lt;select id=<span class="string">&quot;我是id&quot;</span> resultMap=<span class="string">&quot;我是结果集&quot;</span>&gt;这里没写语句汇报这个错&lt;/select&gt;</span><br></pre></td></tr></table></figure>## 2.Parameter index out of range (1 > number of parameters, which is 0).<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">你的mapper.xml文件里有个语句的入参类型不对具体方式参考下图：</span><br><span class="line">#&#123;&#125;与$&#123;&#125;两者都可以在mybatis中用在输入映射</span><br><span class="line">#&#123;&#125;和$&#123;&#125;的区别:</span><br><span class="line">#&#123;&#125;是预编译处理，</span><br><span class="line">$&#123;&#125;是字符串替换。</span><br><span class="line"></span><br><span class="line">mybatis在处理#&#123;&#125;时，会将sql中的#&#123;&#125;替换为?号，调用PreparedStatement的<span class="built_in">set</span>方法来赋值；</span><br><span class="line">mybatis在处理 $ &#123; &#125; 时，就是把 $&#123; &#125; 替换成变量的值，完成的是简单的字符串拼接。</span><br><span class="line"></span><br><span class="line">补充：在mybatis中使用#&#123;&#125;可以防止sql注入，提高系统安全性。</span><br><span class="line"></span><br><span class="line">sql注入是什么：</span><br><span class="line">例如：用户输入的账号密码在代码中是以字符串拼接的方式生成查询语句的，这样用户输入的内容很容易改变我们的原查询代码，这就相当一一个数据库注入问题。</span><br><span class="line">我们验证密码和账号的时候，如果用户在输入密码的时候 输入 or <span class="number">1</span>=<span class="number">1</span>；那不管他输入的密码是什么都可以通过。  </span><br></pre></td></tr></table></figure>![20200918135954439](20200918135954439.png)## 3.Invalid bound statement (not found): <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">应该是你的配置文件*.xml文件的路径错了</span><br></pre></td></tr></table></figure>## 4.（很长一串最后是）Cause: java.lang.ClassNotFoundException: Cannot find class: bean.TabScddinfo<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个问题最狗卡我将近一天，</span><br><span class="line">你那个mapper.xml里注入的bean/model类型没有根据路径映射进去</span><br><span class="line">，检查一下入参出参是不是写的都对。</span><br></pre></td></tr></table></figure>这里便于写作的时候复制格式<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## 2.模板格式</span><br><span class="line"></span><br><span class="line">&lt;font color=#999AAA &gt;代码如下（示例）：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​```c</span><br><span class="line">这里便于写作的时候复制格式</span><br></pre></td></tr></table></figure><font color=#999AAA >该处使用的url网络请求的数据。<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >提示：这里对文章进行总结：<br>例如：以上就是今天要讲的内容，本文仅仅简单介绍了pandas的使用，而pandas提供了大量能使我们快速便捷地处理数据的函数和方法。</p>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接取某个汉字前面的字符和hashmap的排序</title>
      <link href="/2020/09/16/%E6%8E%A5%E5%8F%96%E6%9F%90%E4%B8%AA%E6%B1%89%E5%AD%97%E5%89%8D%E9%9D%A2%E7%9A%84%E5%AD%97%E7%AC%A6%E5%92%8Chashmap%E7%9A%84%E6%8E%92%E5%BA%8F/"/>
      <url>/2020/09/16/%E6%8E%A5%E5%8F%96%E6%9F%90%E4%B8%AA%E6%B1%89%E5%AD%97%E5%89%8D%E9%9D%A2%E7%9A%84%E5%AD%97%E7%AC%A6%E5%92%8Chashmap%E7%9A%84%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA >记录一次心得</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 前言<font color=#999AAA >上面给了一个查省份信息并输出数量的echarts图标功能，本来以为很简单一条数据的事，谁知道真写起来蛮复杂的。</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >提示：以下是本篇文章正文内容，下面案例可供参考</p><h1 id="一、目的"><a href="#一、目的" class="headerlink" title="一、目的"></a>一、目的</h1><p><img src="https://img-blog.csdnimg.cn/20200916094745918.png#pic_center" alt="在这里插入图片描述"></p><p><font color=#999AAA >如图片所示先写后台，前台代码不会放出。</p><h1 id="二、使用步骤"><a href="#二、使用步骤" class="headerlink" title="二、使用步骤"></a>二、使用步骤</h1><h2 id="1-分析库"><a href="#1-分析库" class="headerlink" title="1.分析库"></a>1.分析库</h2><p><font color=#999AAA >数据库内容（示例）：<br><img src="https://img-blog.csdnimg.cn/20200916094847619.png#pic_center" alt="在这里插入图片描述"><br>我去，你是认真的吗，我要的数据你怎么给我放一块了（心塞💔）。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">看完数据库之后想法如下：</span><br><span class="line"><span class="number">1.</span>首先数据库中取出该字段.</span><br><span class="line"><span class="number">2.</span>然后判断是否为省，是否为一级城市.</span><br><span class="line">并相应地截取省市字段去统计这个字段出现的次数.</span><br><span class="line">（还有个最头疼的顺序问题！）</span><br><span class="line"><span class="number">3.</span>将这个结果集保存为json传给前台.</span><br></pre></td></tr></table></figure></p><h2 id="2-执行第1条"><a href="#2-执行第1条" class="headerlink" title="2.执行第1条"></a>2.执行第1条</h2><p><font color=#999AAA >代码如下（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">代入感很强，数据没查出来，数据库已经被我删干净了，查不到东西那就把能查到的都删掉。</span><br><span class="line"></span><br><span class="line">赠送神秘代码，公司虚拟机运行可获得升官发财奖励（不会真的有人尝试吧~）:</span><br><span class="line">rm -rf</span><br></pre></td></tr></table></figure><h2 id="3-执行第2条"><a href="#3-执行第2条" class="headerlink" title="3.执行第2条"></a>3.执行第2条</h2><p><font color=#999AAA >然后判断是否为省，是否为一级城市.<br>并相应地截取省市字段去统计这个字段出现的次数.：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//声明一个接取值的map</span></span><br><span class="line">HashMap&lt;类型,类型&gt; result  = new HashMap&lt;类型,类型&gt;();</span><br><span class="line"><span class="comment">//接取值</span></span><br><span class="line">List&lt;马赛克&gt; g = 数据库查询;</span><br><span class="line">String province = null;</span><br><span class="line"><span class="comment">//统计每个区域出现的词条及次数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;g.size();j++)&#123;</span><br><span class="line">    <span class="comment">//获取地址名称</span></span><br><span class="line">    String gg = g.get(j).我是一条bean属性();</span><br><span class="line">    <span class="comment">//接取前先判断是否为省或一级城市</span></span><br><span class="line">    <span class="keyword">if</span>(gg.contains(<span class="string">&quot;省&quot;</span>))&#123;</span><br><span class="line">        <span class="comment">//为省拼接字符串</span></span><br><span class="line">        province = gg.substring(<span class="number">0</span>,gg.indexOf(<span class="string">&quot;省&quot;</span>))+<span class="string">&quot;省&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (gg.contains(<span class="string">&quot;市&quot;</span>))&#123;</span><br><span class="line">        <span class="comment">//为市拼接字符串</span></span><br><span class="line">        province = gg.substring(<span class="number">0</span>,gg.indexOf(<span class="string">&quot;市&quot;</span>))+<span class="string">&quot;市&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//非省市不用处理</span></span><br><span class="line">        province = gg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下面为统计每个词条出现的次数，有则value+1，没有就value放1</span></span><br><span class="line">    <span class="keyword">if</span> (result.containsKey(province))&#123;</span><br><span class="line">        result.put(province,result.get(province)+<span class="number">1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        result.put(province,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-执行第3条"><a href="#4-执行第3条" class="headerlink" title="4.执行第3条"></a>4.执行第3条</h2><p><font color=#999AAA >别忘了对你的hashmap进行排序（我都写好了，快点去生成工具类！叫爸爸！）（ok！这个是纠正代码，map在转换为json之后是没有顺序的，所以要换种方法，声明一个vo的bean类专门作为取值用然后将这个bean放在list里面之后转json提交给前台以下对hashmap代码排序无用，同时给出第二种方法，在数据库里直接查这样简单些）：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对hashmap进行排序</span></span><br><span class="line">    public <span class="type">static</span> HashMap&lt;String,Integer&gt; <span class="title function_">sortHashMap</span><span class="params">(HashMap&lt;String, Integer&gt; <span class="built_in">map</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//從HashMap中恢復entry集合，得到全部的鍵值對集合</span></span><br><span class="line">        Set&lt;Map.Entry&lt;String,Integer&gt;&gt; entey = <span class="built_in">map</span>.entrySet();</span><br><span class="line">        <span class="comment">//將Set集合轉為List集合，為了實用工具類的排序方法</span></span><br><span class="line">        List&lt;Map.Entry&lt;String,Integer&gt;&gt; <span class="built_in">list</span> = new ArrayList&lt;Map.Entry&lt;String,Integer&gt;&gt;(entey);</span><br><span class="line">        <span class="comment">//使用Collections工具類對list進行排序</span></span><br><span class="line">        Collections.sort(<span class="built_in">list</span>, new Comparator&lt;Map.Entry&lt;String,Integer&gt;&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public <span class="type">int</span> compare(Map.Entry&lt;String,Integer&gt; o1, Map.Entry&lt;String,Integer&gt; o2) &#123;</span><br><span class="line">                <span class="comment">//倒敘排列正序下面到换位置</span></span><br><span class="line">                <span class="keyword">return</span> o2.getValue()-o1.getValue();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//創建一個HashMap的子類LinkedHashMap集合</span></span><br><span class="line">        LinkedHashMap&lt;String, Integer&gt; linkedHashMap = new LinkedHashMap&lt;String, Integer&gt;();</span><br><span class="line">        <span class="comment">//將list中的數據存入LinkedHashMap中</span></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;String, Integer&gt; entry:<span class="built_in">list</span>)&#123;</span><br><span class="line">            linkedHashMap.put(entry.getKey(),entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> linkedHashMap;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">tmp.sheng,</span><br><span class="line">count(tmp.sheng) as count </span><br><span class="line"><span class="title function_">from</span> <span class="params">(</span></span><br><span class="line"><span class="params">select</span></span><br><span class="line"><span class="params">(<span class="keyword">case</span></span></span><br><span class="line"><span class="params">when 表名 like <span class="string">&#x27;%省%&#x27;</span> then concat(substring_index(表名,<span class="string">&#x27;省&#x27;</span>,<span class="number">1</span>),<span class="string">&#x27;省&#x27;</span>)</span></span><br><span class="line"><span class="params">when 表名 like <span class="string">&#x27;%自治区%&#x27;</span> then concat(substring_index(表名,<span class="string">&#x27;自治区&#x27;</span>,<span class="number">1</span>),<span class="string">&#x27;自治区&#x27;</span>)</span></span><br><span class="line"><span class="params">when 表名 like <span class="string">&#x27;%市%&#x27;</span>then concat(substring_index(表名,<span class="string">&#x27;市&#x27;</span>,<span class="number">1</span>),<span class="string">&#x27;市&#x27;</span>)</span></span><br><span class="line"><span class="params">end) as sheng</span></span><br><span class="line"><span class="params">from gg_ksda</span></span><br><span class="line"><span class="params">)</span> tmp</span><br><span class="line">group by tmp.sheng</span><br><span class="line">order by <span class="title function_">count</span><span class="params">(tmp.sheng)</span> DESC</span><br></pre></td></tr></table></figure></p><p><font color=#999AAA >自己转json：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">代入感很强👍我已经开始报错了，马上准备删库跑人。</span><br><span class="line">这里有个小技巧：</span><br><span class="line">@RequestMapping(value = <span class="string">&quot;请求名称&quot;</span>,produces = <span class="string">&quot;application/json;charset=UTF-8&quot;</span>)</span><br><span class="line">后面的这个produces 属性可以直接将返回的参数以jsonarray或者json的形式提交给前台，非常方便。</span><br></pre></td></tr></table></figure><p><font color=#999AAA >我是一条小尾巴。。。</p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >收获挺多的总来点细节（没有细节的话不就分手了吗）：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">contain()与inIndexOf()都可以判断一串字符串中是否有某个字符，那两者有什么区别呢？</span><br><span class="line">String.contain(<span class="string">&quot;字符或字符串&quot;</span>)是判断List是否包含某个对象成员，返回布尔类型。</span><br><span class="line">（性格爽快，你问有没有，人家直接就告诉你有没有，丝毫不拖沓）</span><br><span class="line">String.IndexOf(<span class="string">&quot;&quot;</span>)是判断对象在该<span class="built_in">list</span>里面的位置，没有返回<span class="number">-1</span>，有的话返回索引位置。</span><br><span class="line">（小心思细腻，你问有没有人家会告诉你在哪里方便你去找，没有的话他就告诉你在外太空（<span class="number">-1</span>）哈哈）</span><br><span class="line"></span><br><span class="line">json转换：</span><br><span class="line">@RequestMapping(value = <span class="string">&quot;请求名称&quot;</span>,produces = <span class="string">&quot;application/json;charset=UTF-8&quot;</span>)</span><br><span class="line">后面的这个produces 属性可以直接将返回的参数以jsonarray或者json的形式提交给前台，非常方便。</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySql </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>div+css+js实现渐变色根据按百分比显示的横向柱状图</title>
      <link href="/2020/09/04/div-css-js%E5%AE%9E%E7%8E%B0%E6%B8%90%E5%8F%98%E8%89%B2%E6%A0%B9%E6%8D%AE%E6%8C%89%E7%99%BE%E5%88%86%E6%AF%94%E6%98%BE%E7%A4%BA%E7%9A%84%E6%A8%AA%E5%90%91%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
      <url>/2020/09/04/div-css-js%E5%AE%9E%E7%8E%B0%E6%B8%90%E5%8F%98%E8%89%B2%E6%A0%B9%E6%8D%AE%E6%8C%89%E7%99%BE%E5%88%86%E6%AF%94%E6%98%BE%E7%A4%BA%E7%9A%84%E6%A8%AA%E5%90%91%E6%9F%B1%E7%8A%B6%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="div-css-js实现渐变色根据按百分比显示的横向柱状图"><a href="#div-css-js实现渐变色根据按百分比显示的横向柱状图" class="headerlink" title="div+css+js实现渐变色根据按百分比显示的横向柱状图"></a>div+css+js实现渐变色根据按百分比显示的横向柱状图</h1><font color=#999AAA >echarts完成不了我的需求，尝试用最原始的方法画一个横向渐变色柱状图<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><font color=#999AAA >一起加油</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># 前言<font color=#999AAA >echarts完成不了我的需求，尝试用最原始的方法画一个横向渐变色柱状图</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p><font color=#999AAA >提示：以下是本篇文章正文内容，下面案例可供参考</p><h1 id="一、目标展示？"><a href="#一、目标展示？" class="headerlink" title="一、目标展示？"></a>一、目标展示？</h1><p><img src="20200904103915496.png" alt="20200904103915496"><br>没错，又是这张图，可以看到用echarts的话左边图片不好对其而且鼠标悬浮背景色的柱子会出现前面柱子被隐藏的情况，下面用最原始的方法做一下。</p><p><font color=#999AAA >示例：pandas 是基于NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。</p><h1 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h1><h2 id="1-js"><a href="#1-js" class="headerlink" title="1.js"></a>1.js</h2><p><font color=#999AAA >代码如下（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">function <span class="title function_">rbar</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//获取div背景长度</span></span><br><span class="line">var rbcwidth = document.getElementById(<span class="string">&quot;rbcbar&quot;</span>);</span><br><span class="line">var rmaxlength = rbcwidth.clientWidth||rbcwidth.offsetWidth;</span><br><span class="line"><span class="comment">//设置最大值</span></span><br><span class="line">var rmaxvalue = <span class="number">1000</span>;</span><br><span class="line"><span class="comment">//获取货物数量柱状图id</span></span><br><span class="line">var rbar = document.getElementById(<span class="string">&quot;rightbar&quot;</span>);</span><br><span class="line"><span class="comment">//获取显示货物名称div的id</span></span><br><span class="line">var rname = document.getElementById(<span class="string">&quot;rightname&quot;</span>);</span><br><span class="line"><span class="comment">//获取货物数量库存id</span></span><br><span class="line">var rnum = document.getElementById(<span class="string">&quot;pronum&quot;</span>);</span><br><span class="line"><span class="comment">//显示货物名称给参 </span></span><br><span class="line">var rightname = <span class="string">&quot;产品&quot;</span>;</span><br><span class="line">var rightnum =<span class="number">380</span>;</span><br><span class="line"><span class="comment">//输出文字</span></span><br><span class="line">rname.innerHTML = rightname;</span><br><span class="line">rnum.innerHTML = rightnum;</span><br><span class="line"><span class="comment">//规定右边div长度</span></span><br><span class="line">var rbarwidth = rightnum/rmaxvalue*rmaxlength;</span><br><span class="line">alert(rbarwidth);</span><br><span class="line"><span class="comment">//内长度</span></span><br><span class="line">rbar.style.width = rbarwidth + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line"><span class="comment">//显示货物数量给参</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="comment">/*alert(maxvalue);</span></span><br><span class="line"><span class="comment">document.getElementById(&quot;sss&quot;).innerHTML=Date();*/</span></span><br><span class="line"><span class="comment">//json</span></span><br><span class="line"><span class="comment">/*var text = &#x27;&#123; &quot;sites&quot; : [&#x27; +</span></span><br><span class="line"><span class="comment">    &#x27;&#123; &quot;name&quot;:&quot;Runoob&quot; , &quot;num&quot;:&quot;234&quot; &#125;,&#x27; +</span></span><br><span class="line"><span class="comment">    &#x27;&#123; &quot;name&quot;:&quot;Google&quot; , &quot;num&quot;:&quot;122&quot; &#125;,&#x27; +</span></span><br><span class="line"><span class="comment">    &#x27;&#123; &quot;name&quot;:&quot;Taobao&quot; , &quot;num&quot;:&quot;234&quot; &#125; ]&#125;&#x27;;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">obj = JSON.parse(text);</span></span><br><span class="line"><span class="comment">document.getElementById(&quot;demo&quot;).innerHTML = obj.sites[1].name + &quot; &quot; + obj.sites[1].url;*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2-html"><a href="#2-html" class="headerlink" title="2.html"></a>2.html</h2><p><font color=#999AAA >代码如下（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;rtright&quot;</span> style=<span class="string">&quot;float: left;height: 140%;width: 420px;margin-left: 20px;&quot;</span>&gt;</span><br><span class="line">&lt;!--一行柱状图--&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;barout&quot;</span>&gt;</span><br><span class="line">&lt;!--&lt;div style=<span class="string">&quot;width: 32px;height: 32px;background-image: url(test/img/cycle.png);background-size: 100%;background-repeat: no-repeat;float: left;&quot;</span>&gt;--&gt;</span><br><span class="line">&lt;div class=<span class="string">&quot;barout-img&quot;</span>&gt;</span><br><span class="line">&lt;p&gt;<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!--名称--&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;rightname&quot;</span> class=<span class="string">&quot;baroutname&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;rbcbar&quot;</span> class=<span class="string">&quot;bcbar&quot;</span>&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;rightbar&quot;</span> class=<span class="string">&quot;barinbar&quot;</span>  style=<span class="string">&quot;background-image: linear-gradient(90deg, #29cefe 0%, #ee981a 100%);&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!--数量--&gt;</span><br><span class="line">&lt;a id=<span class="string">&quot;pronum&quot;</span> class=<span class="string">&quot;barnum&quot;</span> style=<span class="string">&quot;color: #FFFFFF;&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><font color=#999AAA >应该可以了，不行的话私我<br>效果：<img src="20200904104421468.png" alt="20200904104421468"><br>自己去用什么标签循环出来吧。加油。</p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA ><br>一个好的思路真就比傻干省事多了</p>]]></content>
      
      
      <categories>
          
          <category> eCharts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Css </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Js快速入门文档</title>
      <link href="/2020/09/04/Js%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2020/09/04/Js%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="js学习目录"><a href="#js学习目录" class="headerlink" title="js学习目录"></a>js学习目录</h1><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">文章摘自> [菜鸟教程](https://www.runoob.com/js/js-syntax.html).</font># 一、js是什么？做什么？JavaScript 是 Web 的编程语言。所有现代的 HTML 页面都使用 JavaScript。**HTML 定义了网页的布局。CSS 描述了网页的样式（个人理解class标记样式，id标记js）。JavaScript 网页的行为。**# 二、使用步骤## 1.快速上手（上面加粗前两行理解后快速做项目）？###### (1)输出文本内容alert("弹框显示");document.write("要输出的内容或参数");console.log（“控制台输出”)；###### (2)修改文本内容（其他方式自行百度）document.getElementById("这里填想要改变的div的id").innerHTML="修改后的内容";###### (3)修改div样式（以下内容最好在一个js函数内执行）        var bcwidth = document.getElementById("目标id");//先获取目标这里用id获取得到参数（这里可以理解为可编辑的对象）        bcwidth .style.width = 12 + 'px';//这种表达形式大差不差，可以根据自己的需要百度对于第二行的解释：拼字符串的形式去拼接div，视图解析器会将这段字符串处理为h5语言，要注意拼接字符串的方法与java相同，格式为> 参数+“字符串”+参数+“字符串”+参数> 例如：var nessage = “a的数量为”+a+“个”；[document的其他用法](https://www.cnblogs.com/tylerdonet/p/4797103.html).## 2.js语法？代码块###### (1) 数字（Number）：可以是整数小数或科学计数。        3.14        1001        123e###### (2)字符串（String）：单/双引号引起来。        "stringaa"        'sa@~12343'###### (3)运算符        赋值，算术运算符有            =  +  -  *  /        条件比较及逻辑运算符            ==  != <  > ###### (4)定义类型        //与其他语言的开发不一样，js一般都用只var来声明参数        //等号右边也可以为表达式        var length = 16;         // Number 通过数字字面量赋值        var points = x * 10;     // Number 通过表达式字面量赋值        var lastName = "Johnson";     // String 通过字符串字面量赋值        var cars = ["Saab", "Volvo", "BMW"]; // Array  通过数组字面量赋值        var person = {firstName:"John", lastName:"Doe"};  // Object 通过对象     字面量赋值###### (5)js的数据类型会自我转换        基本就是谁跟字符串类型都会变成字符串类型###### (6)注意JavaScript 字母大小写        JavaScript 对大小写是敏感的。        当编写 JavaScript 语句时，请留意是否关闭大小写切换键。        函数 getElementById 与 getElementbyID 是不同的。        同样，变量 myVariable 与 MyVariable 也是不同的。###### (7)js函数模板        <script>                //定义参数                var name = 这里参考（4）定义类型                //定义函数                function 这里写函数名 (a,b,c,d)｛//括号内为传入的参数，也可以不传参                //这里也可以定义参数，使用任何表达式                //这里也可以写入    1.快速入手   里的东西对div的内容与样式进行编辑                return x；//x为返回值，可以是任何类型，也可以无返回值                ｝        </script>###### (8)如何调用js函数[查看具体的事件请点我](https://www.w3school.com.cn/tags/html_ref_eventattributes.asp).        在对应事件哪里调用例如 onclick="对应函数的函数名" 这里就是对一个点击事件调用js的调用。        延伸（预加载）：有些函数需要在网页加载的时候就被启用，这种方式有                body onload="func1();func2();func3();"                在html的body调用函数，此处可以调用多个。                其他方式自己百度，这个就够用了。###### (9)代码规范    js会忽略多余的空格例（合理的排列不会出现少括号的情况也便于代码的阅读）：        var person="runoob";        var person = "runoob";        这两者的作用是相同的        添加注释(该操作便于对代码的第二次维护)：        alt/shift+/        **代码知识普及：**        JavaScript 代码是 JavaScript 语句的序列。        浏览器按照编写顺序依次执行每条语句。        例：        document.getElementById("demo").innerHTML="你好 Dolly";        document.getElementById("demo").innerHTML="你最近怎么样?";        按顺序执行最后demo显示的信息为你最近怎么样        **代码块知识普及：**        JavaScript 可以分批地组合起来。        代码块以左花括号开始，以右花括号结束。        代码块的作用是一并地执行语句序列。        本例向网页输出一个标题和两个段落：        function myFunction()        {        document.getElementById("demo").innerHTML="你好Dolly";        document.getElementById("myDIV").innerHTML="你最近怎么样?";        }        这是一个代码块<font color=#999AAA >下面还没写（示例）：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import pandas as pd</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import seaborn as sns</span><br><span class="line">import warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line">import  ssl</span><br><span class="line">ssl._create_default_https_context = ssl._create_unverified_context</span><br></pre></td></tr></table></figure>## 2.读入数据<font color=#999AAA >代码如下（示例）：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(</span><br><span class="line">    <span class="string">&#x27;https://labfile.oss.aliyuncs.com/courses/1283/adult.data.csv&#x27;</span>)</span><br><span class="line">print(data.head())</span><br></pre></td></tr></table></figure><font color=#999AAA >该处使用的url网络请求的数据。<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >提示：这里对文章进行总结：<br>例如：以上就是今天要讲的内容，本文仅仅简单介绍了pandas的使用，而pandas提供了大量能使我们快速便捷地处理数据的函数和方法。</p>]]></content>
      
      
      <categories>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Css </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>echarts横向柱状图渐变色</title>
      <link href="/2020/08/29/echarts%E6%A8%AA%E5%90%91%E6%9F%B1%E7%8A%B6%E5%9B%BE%E6%B8%90%E5%8F%98%E8%89%B2/"/>
      <url>/2020/08/29/echarts%E6%A8%AA%E5%90%91%E6%9F%B1%E7%8A%B6%E5%9B%BE%E6%B8%90%E5%8F%98%E8%89%B2/</url>
      
        <content type="html"><![CDATA[<font color=#999AAA >提示：文章写完后，目录可以自动生成，如何生成可参考右边的帮助文档</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"># echarts横向柱状图<font color=#999AAA >一个简单的样式</font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、样式？"><a href="#一、样式？" class="headerlink" title="一、样式？"></a>一、样式？</h1><p><img src="20200829105341614.png" alt="20200829105341614"></p><p><font color=#999AAA >示例：样式其实一样就是改了颜色</p><h1 id="二、使用步骤"><a href="#二、使用步骤" class="headerlink" title="二、使用步骤"></a>二、使用步骤</h1><h2 id="1-引入库"><a href="#1-引入库" class="headerlink" title="1.引入库"></a>1.引入库</h2><p><font color=#999AAA >代码如下（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span> name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0,user-scalable=no,maximum-scale=1.0&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span><br><span class="line">  &lt;!-- Bootstrap --&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;test/css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span> media=<span class="string">&quot;screen&quot;</span>&gt;</span><br><span class="line">&lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入 --&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- 包括所有已编译的插件 --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;test/js/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- 引入 echarts.js --&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;https://cdn.staticfile.org/echarts/4.3.0/echarts.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;js/echarts.min.js&quot;</span> &gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="2-html-js"><a href="#2-html-js" class="headerlink" title="2.html+js"></a>2.html+js</h2><p><font color=#999AAA >代码如下（示例）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;rtleft&quot;</span> style=<span class="string">&quot;float: left;height: 100%;width: 420px;margin-left: 20px;margin-top: -50px;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;!--右上靠左--&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="comment">// 基于准备好的dom，初始化echarts实例</span></span><br><span class="line">        var myChart = echarts.init(document.getElementById(<span class="string">&#x27;rtleft&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定图表的配置项和数据</span></span><br><span class="line">        var option = &#123;</span><br><span class="line">            dataset: &#123;</span><br><span class="line">        source: [</span><br><span class="line">            [<span class="string">&#x27;score&#x27;</span>, <span class="string">&#x27;amount&#x27;</span>, <span class="string">&#x27;product&#x27;</span>],</span><br><span class="line">            [<span class="number">89.3</span>, <span class="number">58212</span>, <span class="string">&#x27;业务员1&#x27;</span>],</span><br><span class="line">            [<span class="number">57.1</span>, <span class="number">78254</span>, <span class="string">&#x27;业务员2&#x27;</span>],</span><br><span class="line">            [<span class="number">74.4</span>, <span class="number">41032</span>, <span class="string">&#x27;业务员3&#x27;</span>],</span><br><span class="line">            [<span class="number">50.1</span>, <span class="number">12755</span>, <span class="string">&#x27;业务员4&#x27;</span>],</span><br><span class="line">            [<span class="number">52.1</span>, <span class="number">12055</span>, <span class="string">&#x27;业务员6&#x27;</span>],</span><br><span class="line">        ]&#125;,</span><br><span class="line">        grid: &#123;containLabel: <span class="literal">true</span>&#125;,</span><br><span class="line">    xAxis: &#123;name: <span class="string">&#x27;amount&#x27;</span>,</span><br><span class="line">    show:<span class="literal">false</span>&#125;,</span><br><span class="line">    yAxis: &#123;</span><br><span class="line">    inverse:<span class="literal">true</span>,</span><br><span class="line">    type: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">    axisLine:&#123;</span><br><span class="line">           show:<span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    axisTick: &#123;</span><br><span class="line">    show: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    axisLabel: &#123;</span><br><span class="line">    show: <span class="literal">true</span>,</span><br><span class="line">    textStyle: &#123;</span><br><span class="line">    color:<span class="string">&#x27;#fff&#x27;</span>  <span class="comment">//这里用参数代替了</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    series: [&#123;</span><br><span class="line">        type: <span class="string">&#x27;bar&#x27;</span>,</span><br><span class="line">        encode: &#123;</span><br><span class="line">            <span class="comment">// Map the &quot;amount&quot; column to X axis.</span></span><br><span class="line">            x: <span class="string">&#x27;amount&#x27;</span>,</span><br><span class="line">            <span class="comment">// Map the &quot;product&quot; column to Y axis</span></span><br><span class="line">            y: <span class="string">&#x27;product&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line">                <span class="comment">//通常情况下：</span></span><br><span class="line">                normal: &#123;</span><br><span class="line">                    barBorderRadius: <span class="number">20</span>,</span><br><span class="line">                    color: new echarts.graphic.LinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, [&#123;</span><br><span class="line">                        offset: <span class="number">0</span>,</span><br><span class="line">                        color: <span class="string">&#x27;#2cccfd&#x27;</span></span><br><span class="line">                    &#125;, &#123;</span><br><span class="line">                        offset: <span class="number">1</span>,</span><br><span class="line">                        color: <span class="string">&#x27;#fc5a5a&#x27;</span></span><br><span class="line">                    &#125;]),</span><br><span class="line">                    shadowColor: <span class="string">&#x27;rgba(0, 0, 0, 0.4)&#x27;</span>,</span><br><span class="line">                    shadowBlur: <span class="number">20</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            label: &#123;</span><br><span class="line">                show: <span class="literal">true</span>, <span class="comment">//开启显示</span></span><br><span class="line">                position: <span class="string">&#x27;right&#x27;</span>, <span class="comment">//在上方显示</span></span><br><span class="line">                textStyle: &#123; <span class="comment">//数值样式</span></span><br><span class="line">                  color: <span class="string">&#x27;#fff&#x27;</span>,</span><br><span class="line">                  fontSize: <span class="string">&#x27;12&#x27;</span></span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;,   </span><br><span class="line">    &#125;]</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span><br><span class="line">    myChart.setOption(option);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><font color=#999AAA >LinearGradient（）用来控制家变色及方向后面的四个数控制方向，具体自己百度</p><p>&lt;hr style=” border:solid; width:100px; height:1px;” color=#000000 size=1”&gt;</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >拿走的朋友说一下我看看到底帮到了多少人，谢谢了，我还是菜得离谱。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Js </tag>
            
            <tag> Css </tag>
            
            <tag> Html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
